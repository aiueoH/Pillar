package com.pillar;
import org.andengine.engine.options.EngineOptions;
import org.andengine.engine.options.ScreenOrientation;
import org.andengine.engine.options.resolutionpolicy.RatioResolutionPolicy;
import org.andengine.entity.scene.Scene;
import org.andengine.entity.util.FPSLogger;
import org.andengine.opengl.texture.TextureOptions;
import org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas;
import org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory;
import org.andengine.opengl.texture.region.TiledTextureRegion;
import org.andengine.ui.activity.SimpleBaseGameActivity;

import android.util.DisplayMetrics;
import android.util.Log;


public class GameActivity extends SimpleBaseGameActivity {
	
	private GameController gameController;
	
	public GameActivity() {
		super();
		this.gameController = new GameController();
	}

	@Override
	public EngineOptions onCreateEngineOptions() {
		// 依螢幕縮放至最大, 不變形
		DisplayMetrics dm = new DisplayMetrics();
		getWindowManager().getDefaultDisplay().getMetrics(dm);
		float windowW = dm.widthPixels;
		float windowH = dm.heightPixels;
		if (windowW / GameController.CAM_WIDTH > windowH / GameController.CAM_HEIGHT)
			windowW = GameController.CAM_WIDTH * windowH / GameController.CAM_HEIGHT;
		else
			windowH = GameController.CAM_HEIGHT * windowW / GameController.CAM_WIDTH;
		return new EngineOptions(true, ScreenOrientation.PORTRAIT_SENSOR, new RatioResolutionPolicy(windowW, windowH), this.gameController.getSmoothCamera());
	}

	@Override
	protected void onCreateResources() {
		BitmapTextureAtlasTextureRegionFactory.setAssetBasePath("gfx/");
		BitmapTextureAtlas btaNB = new BitmapTextureAtlas(this.getTextureManager(), 200, 100, TextureOptions.BILINEAR);
		BitmapTextureAtlas btaPB = new BitmapTextureAtlas(this.getTextureManager(), 200, 100, TextureOptions.BILINEAR);
		NoiseBrick.TILEDTEXTURE = BitmapTextureAtlasTextureRegionFactory.createTiledFromAsset(btaNB, this, "noiseB.png", 0, 0, 1, 1);
		PillarBrick.TILEDTEXTURE = BitmapTextureAtlasTextureRegionFactory.createTiledFromAsset(btaPB, this, "pillarB.png", 0, 0, 1, 1);
		btaNB.load();
		
		
	}

	@Override
	protected Scene onCreateScene() {
		this.gameController.setEngine(mEngine);
		this.mEngine.registerUpdateHandler(new FPSLogger());
		this.gameController.setVertexBufferObjectManager(this.getVertexBufferObjectManager());
		this.gameController.setTextureManager(this.getTextureManager());
		this.gameController.setFontManager(this.getFontManager());
		this.gameController.initScene();
		return this.gameController.getScene();
	}

}
